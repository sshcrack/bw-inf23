---
title: "4. Aufgabe: Fahrradwerkstatt"
format:
  html:
    css: "../../styles.css"
    toc: true
    toc-title: "Inhalt"
---

::: {.callout-note appearance="simple"}
## Die Aufgabe
Marc hat sich mit einer kleinen Fahrradwerkstatt
selbstständig gemacht. Aufgrund des Fahrrad-Booms wird es zunehmend schwierig, die ganzen
Reparaturaufträge von Kunden abzuarbeiten.
Daher arbeitet Marc bereits jeden Tag von 9 bis
17 Uhr. Wenn er einen Auftrag beginnt, erledigt
er ihn vollständig, bevor er einen neuen Auftrag
beginnt. Am Ende eines Arbeitstages unterbricht er
gegebenenfalls den aktuellen Auftrag und nimmt
ihn am nächsten Arbeitstag wieder auf.
Bislang erledigt er die Aufträge einfach in der Reihenfolge des Eingangs. Damit sind manche Kunden
unzufrieden: Kurze Aufträge müssen teilweise sehr
lange warten, weil die Werkstatt durch lange
Aufträge blockiert ist. Marc hat sich bereits ein
anderes Verfahren überlegt: Wann immer er einen
neuen Auftrag beginnt, wählt er den kürzesten
unter den bereits vorliegenden Aufträgen.


1. Unterstütze Marc und schreibe ein Programm, das die beiden Verfahren simuliert.
Dazu bekommt es eine Liste von Aufträgen.
Für jeden Auftrag sind Eingangszeitpunkt und Bearbeitungsdauern in Minuten angegeben.
Für die beiden Verfahren soll das Programm die durchschnittliche und die maximale
Wartezeit der Aufträge (in Minuten) berechnen. Die Wartezeit eines Auftrags ist die Differenz zwischen
dem Zeitpunkt seiner Fertigstellung und seinem Eingangszeitpunkt.
2. Begründe, warum auch bei dem zweiten Verfahren vermutlich nicht alle Kunden zufrieden sein werden.
3. Gibt es Verfahren, die du für besser geeignet
hältst? Hierzu kannst du dir auch weitere Kennzahlen als nur die durchschnittliche und maximale
Wartezeit der Aufträge überlegen. Verändere dein Programm entsprechend und beschreibe, inwiefern dein Verfahren deine Erwartungen erfüllt.
:::

## Unser Ansatz
